<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="guna2ImageButton1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <metadata name="chkBox.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="idx.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column2.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column3.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column4.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column5.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column6.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column7.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column8.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
</root>